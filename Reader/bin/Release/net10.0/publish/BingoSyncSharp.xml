<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BingoSyncAPI</name>
    </assembly>
    <members>
        <member name="T:BingoSyncAPI.BingoSync">
            <summary>
            Class for communicating with BingoSync.
            </summary>
        </member>
        <member name="F:BingoSyncAPI.BingoSync.DebugMode">
            <summary>
            If to show Debug info in console about web requests or not.
            </summary>
        </member>
        <member name="E:BingoSyncAPI.BingoSync.OnMessageReceived">
            <summary>
            Sends an event signal with the <see cref="T:BingoSyncAPI.BingoSyncTypes.SocketMessage"/> when a websocket message is made in the connected room.
            </summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSync.MessageReceived">
            <summary/>
        </member>
        <member name="P:BingoSyncAPI.BingoSync.SessionCookies">
            <summary>
            The current session cookies used in the connected room.
            </summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSync.Status">
            <summary>
            The current connection status to a room.
            </summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSync.HasAnyConnection">
            <summary>
            If there is any type of connection being made to the room, Connected, Connecting, or Disconnecting.
            </summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSync.CurrentRoomInfo">
            <summary>
            The currently connected rooms info.
            </summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSync.ConnectionStatus">
            <summary>
            Connection status types.
            </summary>
        </member>
        <member name="F:BingoSyncAPI.BingoSync.ConnectionStatus.Connected">
            <summary/>
        </member>
        <member name="F:BingoSyncAPI.BingoSync.ConnectionStatus.Connecting">
            <summary/>
        </member>
        <member name="F:BingoSyncAPI.BingoSync.ConnectionStatus.Disconnecting">
            <summary/>
        </member>
        <member name="F:BingoSyncAPI.BingoSync.ConnectionStatus.Disconnected">
            <summary/>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.GetResponse(System.String,System.Boolean,System.String)">
             <summary>
             Attempts to communicate with the specified <paramref name="URL"/> using cookies created from joining a room, and returns its response, if specified by <paramref name="returnResponse"/>.
             </summary>
            
             <remarks>
             This is mainly useful for things like getting custon JSON to use on a card from a URL but otherwise usually isn't manually necessary for normal interaction on BingoSync yourself.
             </remarks>
             
             <param name="URL"           >The web URL that will be communicated with</param>
             <param name="returnResponse">If true, will attempt to read the response from the URL</param>
             <param name="post"          >A post request to send with the URL request, often in the format of JSON</param>
            
             <returns>
             The response from <paramref name="URL"/>, if <paramref name="returnResponse"/> is <see langword="True"/>, such as its HTML or raw text data, or specific data based on the post request. Else, returns <see cref="F:System.String.Empty"/>.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.GetCardIDs(System.String,System.String,System.String)">
             <summary>
             Takes in HTML in the expected format of <see href="https://bingosync.com/">BingoSync</see>'s homepage and searches for the supplied <paramref name="gameTitle"/> and matching <paramref name="variantTitle"/> for their IDs.
             </summary>
            
             <remarks>
             If <paramref name="suppliedHTML"/> is <see langword="null"/>, it will attempt a new request to <see href="https://bingosync.com/">BingoSync</see> for its HTML.
             <para/><b>Note:</b> This is generally an unnecessary way to get IDs unless you have some type of need to dynamically obtain new IDs you can't supply yourself, since these should always be the same pair, but may be useful for finding the IDs in the first place.
             <para/>The variant must match one of the available variants given for the specified game, as each one has a seperate group it's linked to based on the games ID.
             </remarks>
             
             <param name="gameTitle"     >The full game title from the Game category on BingoSync</param>
             <param name="variantTitle"  >The full variant title from the Variant category shown with the selected game on BingoSync</param>
             <param name="suppliedHTML"  >If supplied, it will use this HTML to search with rather than attempt a new web request for it</param>
            
             <returns>
             The internal IDs of the game and variant, in the form of <see cref="T:BingoSyncAPI.BingoSyncTypes.CardIDs"/>, or <see langword="null"/> if it failed to find a match.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.JoinRoom(BingoSyncAPI.BingoSyncTypes.RoomInfo)">
             <summary>
             Joins a BingoSync room using the <see cref="T:BingoSyncAPI.BingoSyncTypes.RoomInfo"/> provided information.
             </summary>
            
             <remarks>
             </remarks>
             
             <param name="roomInfo">The rooms info to join from</param>
            
             <returns>
             The final <see cref="T:BingoSyncAPI.BingoSync.ConnectionStatus"/> on attempting to join the room, where <see cref="F:BingoSyncAPI.BingoSync.ConnectionStatus.Connected"/> is a success and <see cref="F:BingoSyncAPI.BingoSync.ConnectionStatus.Disconnected"/> failed.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.SetPlayerColor(BingoSyncAPI.BingoSyncTypes.PlayerColors)">
             <summary>
             If connected to a room, sets the players current color, and updates the <see cref="P:BingoSyncAPI.BingoSync.CurrentRoomInfo"/>.
             </summary>
            
             <remarks>
             </remarks>
             
             <param name="playerColor">The new player color</param>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.SendChatMessage(System.String)">
             <summary>
             If connected to a room, sends the specified <paramref name="message"/> to the chat.
             </summary>
            
             <remarks>
             </remarks>
             
             <param name="message">The chat message to send</param>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.RevealBoard">
             <summary>
             Sends a request to reveal the board for this player.
             </summary>
            
             <remarks>
             This is not required to interact with the board, and only really has a function if you have some type of visual connection tied.
             </remarks>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.SelectSlot(System.Int32,System.Boolean,System.Nullable{BingoSyncAPI.BingoSyncTypes.PlayerColors})">
             <summary>
             Selects and marks/unmarks a <paramref name="slot"/> on the board based on <paramref name="markState"/> and if the <paramref name="color"/> can apply to the request.
             </summary>
            
             <remarks>
             The server-side request also checks if the player making the request is spectator or not.
             </remarks>
             
             <param name="slot">The slot on the board to select, starting from top left to bottom right</param>
             <param name="markState">If the state of the selected slot for this <paramref name="color"/> should be on or off</param>
             <param name="color">The color to use in the request. If <see langword="null"/> this will use your current player color from <see cref="P:BingoSyncAPI.BingoSync.CurrentRoomInfo"/></param>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.CreateNewCard(System.Boolean,System.Boolean,BingoSyncAPI.BingoSyncTypes.CardIDs,System.Int32,System.String)">
             <summary>
             Sends a request to create a new bingo card with the supplied room settings.
             </summary>
            
             <remarks>
             </remarks>
             
             <param name="lockout_mode"  >If the card should be in Lockout mode or not</param>
             <param name="hide_card"     >If the card should be hidden and need revealing</param>
             <param name="cardIDs"       >The IDs of the game and variant to use</param>
             <param name="seed"          >The seed to use for the new card, where if -1, will use a random seed</param>
             <param name="custom_json"   >Custom JSON to pass for the boards creation, primarily used in Custom games</param>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.GetBoardSlots">
             <summary>
             Gets the current boards slots.
             </summary>
            
             <remarks>
             If any updates are being made to the board, it will wait for those updates to be made before returning the result.
             </remarks>
             
             <returns>
             An array of slots in the form of <see cref="T:BingoSyncAPI.BingoSyncTypes.SlotInfo"/>'s last updated by the websocket.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.GetBoardSlot(System.Int32)">
             <summary>
             Gets the <see cref="T:BingoSyncAPI.BingoSyncTypes.SlotInfo"/> of that <paramref name="slot"/> ID.
             </summary>
            
             <remarks>
             If any updates are being made to the board, it will wait for those updates to be made before returning the result.
             </remarks>
             
             <param name="slot">The slot to get, starting from top left to bottom right</param>
             
             <returns>
             The <see cref="T:BingoSyncAPI.BingoSyncTypes.SlotInfo"/> of the specified <paramref name="slot"/>.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.GetRoomSettings">
             <summary>
             Gets the current <see cref="T:BingoSyncAPI.BingoSyncTypes.RoomSettings"/>.
             </summary>
            
             <remarks>
             If any updates are being made to the board, it will wait for those updates to be made before returning the result.
             </remarks>
             
             <returns>
             The current <see cref="T:BingoSyncAPI.BingoSyncTypes.RoomSettings"/> last updated by the websocket.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.GetFeed(System.Boolean)">
             <summary>
             Attempts to retrieve the rooms feed.
             </summary>
            
             <remarks>
             </remarks>
             
             <param name="full">If to get the full history of the rooms feed or not</param>
             
             <returns>
             The rooms feed in the form of JSON, or <see cref="F:System.String.Empty"/> if failed.
             </returns>
        </member>
        <member name="M:BingoSyncAPI.BingoSync.Disconnect">
             <summary>
             Disconnects from the room and closes the sockets.
             </summary>
            
             <remarks>
             </remarks>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes">
            <summary>
            General types used by <see cref="T:BingoSyncAPI.BingoSync"/>.
            </summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.CardIDs">
            <summary>
            Linked IDs used in card generation.
            </summary>
        </member>
        <member name="F:BingoSyncAPI.BingoSyncTypes.CardIDs.GameID">
            <summary>BingoSync's internal Game ID.</summary>
        </member>
        <member name="F:BingoSyncAPI.BingoSyncTypes.CardIDs.VariantID">
            <summary>BingoSync's internal Variant ID linked with this <see cref="F:BingoSyncAPI.BingoSyncTypes.CardIDs.GameID"/>.</summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.SlotInfo">
            <summary>
            Info related to a slot on the board.
            </summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.SlotInfo.Info">
            <summary>The description text shown on this slot.</summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.SlotInfo.ID">
            <summary>The ID of this slot.</summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.SlotInfo.Colors">
            <summary>The colors this slot has on them. If blank, will return an array only containing <see langword="null"/>.</summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.RoomSettings">
            <summary>
            Info related to the settings of the current room.
            </summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.SocketMessage">
            <summary>
            Varying info sent from the socket, where <see cref="P:BingoSyncAPI.BingoSyncTypes.SocketMessage.type"/> should always return the type of socket message.
            </summary>
            
            <remarks>
            <b>Example:</b> If the type is "goal", then info such as <see cref="P:BingoSyncAPI.BingoSyncTypes.SocketMessage.player"/> (Info of who called this) and <see cref="P:BingoSyncAPI.BingoSyncTypes.SocketMessage.square"/> (Info of which slot was effected) will be filled.
            </remarks>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.SocketPlayer">
            <summary>
            Info about who called a socket message.
            </summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.SocketSlot">
            <summary>
            Info about an affected slot from a socket message.
            </summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.RoomInfo">
            <summary>
            Info about a rooms connection.
            </summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.RoomInfo.RoomID">
            <summary>The rooms ID (values shown after /room/ in the URL)</summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.RoomInfo.RoomPassword">
            <summary>The rooms password.</summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.RoomInfo.PlayerName">
            <summary>The name of the player for the instance of their connection.</summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.RoomInfo.PlayerColor">
            <summary>The players color to be shown on the board or feed.</summary>
        </member>
        <member name="P:BingoSyncAPI.BingoSyncTypes.RoomInfo.Spectator">
            <summary>If the instance of this player is a spectator or not.</summary>
        </member>
        <member name="T:BingoSyncAPI.BingoSyncTypes.PlayerColors">
            <summary>
            The player colors available on BingoSync.
            </summary>
        </member>
    </members>
</doc>
